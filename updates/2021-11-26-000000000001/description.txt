UPDATE DESCRIPTION
==================

- Se comienza la automatización de actualizaciones (updates) de SimpleRest

- Se crean "tenant groups" que permiten organizar en distintas carpetas modelos y schemas de distintas bases de datos y agrupar los que se se supone son de bases de datos con igual estructura. Esto permite que dos bases de datos puedan tener ocasionalmente tablas con el mismo nombre y distinta estructura.

Ej:

	'tentant_groups' => [
		'legion' => [
		  'db_[0-9]+',
		  'db_legion',
		  'db_flor'
		],
		'az' => [
		  'az'
		],
	],

- Ahora es posible crear migraciones en sub-sub-directorios:

	php com make migration  --dir=test/sub/sub2 --name=books

- Se vuelve *opcional* especificar el "name" como primer parámetro en "make migration" o "migrations make" si se especifica la tabla o la clase:

Antes:
	php com make migration books [ otros parámetros ]

Ahora:

	php com make migration --dir=test --name=books
	php com make migration --class_name=Books
	php com make migration --table=books
	php com make migration --class_name=BooksRenameColumn --table=books

- Se habilita la creación de "migraciones inline".

Ej:

	php com make migration --dir=test --table=bar --cat --addPrimary=id

genera:

	<?php

	use simplerest\core\interfaces\IMigration;
	use simplerest\libs\Factory;
	use simplerest\libs\Schema;
	use simplerest\core\Model;
	use simplerest\libs\DB;

	class Bar implements IMigration
	{
		/**
		* Run migration.
		*
		* @return void
		*/
		public function up()
		{
			$sc = new Schema('bar');
			$sc->field('id')->primary();
			$sc->alter();			
		}
	}


- Se resuelve problema por el que era necesario hardcodear credenciales en el helper db_dynamic_load.php y ahora pueden residir en archivo .env

- Se vuelve opcional el paquete DotEnv para manejo de variables de entorno. Se provee de la clase Env.

- Se agregan nuevas funcionalidades para manejo de archivos en la librería Files

- Se mejora el funcionamiento de la case Debug.

- Se crea la librería StdOut para controlar el flujo hacia la salida estandar.

- Se hace algo más eficiente la inspección de la base de datos favoreciendo la performance de HATEOAS.

- Se agrega la opción --unignore en el comando "make" para poder sobrescribir archivos aún cuando estén ignorados via .make_ignore (usar con precaución porque es la última guarda)

- Fueron revisados que campos son fillables ("rellenables"). Se afectó Model y ApiController 

- Se cambió campo automático "locked" por "is_locked". Se afectó Model y ApiController 