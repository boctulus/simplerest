INSTALACIÓN
===========

-- Ajustar permisos de carpetas:

logs
app/security

-- Copiar el archivo .env.example a .env y configurar

-- Si Ud. tiene una tabla usuarios prosiga con el paso siguiente y sino corra las siguiente migraciones que le creará una tabla "users" con todas las capacidades del framework:

    php com migrations migrate --file=0000_00_00_00000000_migrations.php

y luego

    php com migrations migrate --file=users/0000_00_00_00000001_users.php

-- Configurar config/config.php 

    - Conexiones a bases de datos (ver .env)
    
    - Declarar cual será la tabla de usuarios (de la DB principal). Ej: 

        'users_table' =>  'tbl_usuario_empresa'

    - Para una carga dinámica de las bases de datos definidas para el sistema multitenant en el config/config.php se puede incluir un script con cualquier nombre que tocaría configurar:

    <?php

        require_once 'constants.php';
        require_once HELPERS_PATH. 'etc.php';
        require_once HELPERS_PATH. 'db_dynamic_load.php';  // <----

    Vale aclarar que si bien el archivo puede ser un "helper" y este tipo de archivos son autocargados cuando se está en el ámbito del config.php esta carga automática de los helpers no está disponible.

    En el config.php se pueden usar variables de entorno pero no desde archivos incluidos desde el config.php como es el caso de nuestro archivo 'db_dynamic_load.php' cuyo nombre recuerden puede ser cualquiera.

    En el archivo incluido es necesario incluir información como las credenciales para autenticarnos ante el motor de base de datos elegido así como puertos:

        $driver = 'mysql';
        $host   = '127.0.0.1';
        $port   = 3306;
        $dbname = 'mi_db';
        $user = 'mi_usuario';
        $pass = 'mi_password';
        $charset = 'utf8';

    Podrían usarse credenciales distintas e incluso motores de bases de datos diferentes para la base de datos principal y las bases de datos de la multitenencia.

-- Parado en el root del proyecto:

composer install

-- Parado nuevamente en el root del proyecto

php com install

-- Si Ud. tiene una tabla "users" distinta a la provista en migraciones debe configurar campos en el Modelo correspondiente para su tabla "usuarios". Ej:

    Para TblUsuarioEmpresaModel

        class TblUsuarioEmpresaModel extends Model
        { 
            protected $hidden    	= ['use_decPassword'];
            protected $not_fillable = ['est_intIdEstado'];

            protected $createdAt 	= 'use_dtimFechaCreacion';
            protected $updatedAt 	= 'use_dtimFechaActualizacion';
            //protected $deletedAt  = 'deleted_at'; 
            protected $createdBy 	= 'usu_intIdCreador';
            protected $updatedBy 	= 'usu_intIdActualizador';
            //protected $deletedBy  = 'deleted_by'; 
            //protected $is_locked     = 'is_locked';
            //protected $belongsTo  = 'belongs_to';

            public static $is_active	= 'est_intIdEstado';
            public static $username	= 'use_varUsuario';
            public static $email	= 'use_varEmail';
            public static $password = 'use_decPassword';
            public static $confirmed_email;


            function __construct(bool $connect = false){
                $this->registerInputMutator(self::$password, function($pass){ 
                    return password_hash($pass, PASSWORD_DEFAULT); 
                }, function($op, $dato){
                    return ($dato !== null);
                });

                //$this->registerOutputMutator('password', function($pass){ return '******'; } );
                parent::__construct($connect, TblUsuarioEmpresaSchema::class);
            }
            
            /*
            function onUpdating(&$data) {
                if ($this->isDirty('email')) {
                    $this->fill(['confirmed_email'])->update(['confirmed_email' => 0]);
                }
            }
            */
        }

    Notar que hay campos para funcionalidades especiales que podrían no estar definidos en su tabla "usuarios" y por tanto dichas funcionalidades no estarán disponibles.


-- Configurar el ACL

config/acl.php


Notas:

- El instalador solo crea schemas y modelos de la base de datos principal (conexión "main" en el config.php) y no crea por defecto ningún endpoint. Para crear endpoints o más modelos / esquemas refiérase a la DOCUMENTACION. 
