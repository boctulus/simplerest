TODO de proyecto 'Supra'
------------------------

- En proyectos es recomendable tener otro template como "TK. ThemeKit"

    https://github.com/ThemeKit/BootstrapAdmin

Como usa BT4 es posible que sea compatible con los componentes de AdminLTE

- Tomar fuentes o algo mas de

https://appdevtools.com/html-validator

  <-- se ve bastante bien!

- Seguir trabajando para integrar totalmente la demo del plugin "X-EDITABLE"

  (funcional en http://simplerest.lan/xeditable)


- Dar la posibilidad de ingresar todo como Array

Ej:

$defs = array(
        // the friendly display name for a payment gateway should be
        // defined here for backwards compatibility
        'FriendlyName' => array(
            'Type' => 'System',
            'Value' => 'Sample Third Party Payment Gateway Module',
        ),
        // a text field type allows for single line text input
        'accountID' => array(
            'FriendlyName' => 'Account ID',
            'Type' => 'text',
            'Size' => '25',
            'Default' => '',
            'Description' => 'Enter your account ID here',
        ),
        // a password field type allows for masked text input
        'secretKey' => array(
            'FriendlyName' => 'Secret Key',
            'Type' => 'password',
            'Size' => '25',
            'Default' => '',
            'Description' => 'Enter secret key here',
        ),
        // the yesno field type displays a single checkbox option
        'testMode' => array(
            'FriendlyName' => 'Test Mode',
            'Type' => 'yesno',
            'Description' => 'Tick to enable test mode',
        ),
        // the dropdown field type renders a select menu of options
        'dropdownField' => array(
            'FriendlyName' => 'Dropdown Field',
            'Type' => 'dropdown',
            'Options' => array(
                'option1' => 'Display Value 1',
                'option2' => 'Second Option',
                'option3' => 'Another Option',
            ),
            'Description' => 'Choose one',
        ),
        // the radio field type displays a series of radio button options
        'radioField' => array(
            'FriendlyName' => 'Radio Field',
            'Type' => 'radio',
            'Options' => 'First Option,Second Option,Third Option',
            'Description' => 'Choose your option!',
        ),
        // the textarea field type allows for multi-line text input
        'textareaField' => array(
            'FriendlyName' => 'Textarea Field',
            'Type' => 'textarea',
            'Rows' => '3',
            'Cols' => '60',
            'Description' => 'Freeform multi-line text input field',
        ),
    );

y entonces

    Html::form($defs);

Obviamente, sería más limitado ya que no alcanzaría a todos los componentes y más bien sería orientado a renderizar elementos de formularo.

https://developers.whmcs.com/payment-gateways/configuration/

>>>>

La *calidad* de los componentes de ciertos plugins para mostrar productos y filtros es *insuperable*. Caso "Custom Product Filter For Woocommerce and Elementor"

https://www.youtube.com/watch?v=sZJsIwCVBKU&ab_channel=MrWebReviews


- Extraer HTML y CSS y para seleccionar el bloque usar algo como:

	https://bootsnipp.com/builder

- Generar vistas para cualquier framework de Front en base a:
    - lista de vistas y sub-vistas 
    - componentes especificados
    - schemas de SimpleRest

- Completar en base a:
    - Historias de usuario
    - Diagramas UML 

// ...

- Crear extensión para FireFox / Chrome que:

    - Detecte el framework de CSS (Bootstrap, Materialize, etc)
    - Permita seleccionar bloques como sections o divs y extraerlos como "componentes" con todos sus estilos.

https://stackoverflow.com/a/4164148/980631    




