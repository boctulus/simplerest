<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.13  |
    |              on 2022-01-15 18:30:56              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace simplerest\core\api\v1; use simplerest\controllers\MyApiController; use simplerest\core\libs\Factory; use simplerest\core\libs\Arrays; use simplerest\core\libs\Strings; use simplerest\core\libs\DB; use simplerest\libs\Debug; use simplerest\core\libs\Validator; use simplerest\core\exceptions\InvalidValidationException; use simplerest\core\libs\Url; class TrashCan extends MyApiController { protected $model; function __construct() { goto y_lep; bO9xU: ewMgj: goto IeMo3; EH_3z: Factory::response()->sendError("\x45\156\x74\x69\164\x79\40\151\x73\40\x72\x65\161\165\x69\162\145\144", 400); goto aJ87M; YHoAw: $fRsHx = "\134\163\151\x6d\160\x6c\x65\162\x65\x73\164\x5c\143\x6f\156\164\x72\157\154\154\x65\x72\x73\134\141\160\151\134" . ucfirst($AM8Vk); goto LwZVo; LwZVo: if (class_exists($fRsHx)) { goto L6glg; } goto n6ym1; vMSSj: $AM8Vk = Strings::snakeToCamel($AM8Vk); goto QrdH5; n6ym1: Factory::response()->sendError("\105\156\x74\x69\x74\x79\40{$AM8Vk}\40\156\x6f\x74\40\146\157\x75\x6e\x64", 404); goto E49b9; y_lep: $AM8Vk = Factory::request()->header("\145\x6e\x74\151\164\x79") ?? Factory::request()->shiftQuery("\x65\156\164\x69\164\171") ?? Factory::request()->shiftBodyParam("\x65\x6e\164\151\x74\171"); goto z9z0A; QrdH5: $this->model_name = ucfirst($AM8Vk) . "\115\x6f\144\x65\154"; goto uaJo1; BDbPV: Factory::response()->sendError("\116\157\164\40\151\x6d\x70\154\145\155\145\x6e\x74\x65\x64", 501, "\124\162\141\163\150\143\x61\156\x20\x6e\157\x74\x20\151\x6d\160\x6c\x65\x6d\x65\156\x74\145\x64\x20\146\x6f\162\40{$AM8Vk}"); goto bO9xU; S2M9o: $this->ask_for_deleted = true; goto h70fw; DXUfX: if ($fRsHx::hasSoftDelete()) { goto ewMgj; } goto BDbPV; aJ87M: GzO30: goto vMSSj; F5Ln2: $this->instance = (new $this->model())->assoc(); goto UGJ5n; h70fw: parent::__construct(); goto Awoys; uaJo1: $this->table_name = strtolower($AM8Vk); goto VzAck; OzmhC: nGUl6: goto F5Ln2; z9z0A: if (!empty($AM8Vk)) { goto GzO30; } goto EH_3z; hgM2h: fzMsJ: goto S2M9o; VzAck: $this->model = "\163\151\x6d\x70\x6c\x65\162\x65\x73\x74\x5c\155\x6f\144\145\154\x73\x5c" . $this->model_name; goto YHoAw; E49b9: L6glg: goto DXUfX; VwxId: Factory::response()->sendError("\x45\156\x74\x69\164\x79\x20{$AM8Vk}\x20\156\x6f\x74\40\x66\x6f\165\x6e\144", 400); goto OzmhC; IeMo3: if (class_exists($this->model)) { goto nGUl6; } goto VwxId; UGJ5n: if ($this->instance->inSchema([$this->instance->deletedAt()])) { goto fzMsJ; } goto HRvuy; HRvuy: Factory::response()->sendError("\x4e\157\164\40\x69\x6d\x70\x6c\145\x6d\145\156\164\x65\x64", 501, "\124\x72\x61\163\x68\x63\x61\x6e\40\x6e\157\164\40\x69\155\160\x6c\x65\155\x65\x6e\164\x65\x64\x20\x66\157\x72\x20{$AM8Vk}"); goto hgM2h; Awoys: } function get($GabDK = null) { goto eNkPs; bIdf2: parent::get($GabDK); goto AFZNV; Wdn0W: Factory::response()->sendError("\106\157\x72\142\151\144\144\145\156", 403); goto R5F0O; R5F0O: gpqnV: goto bIdf2; eNkPs: if (!(!$this->instance->inSchema([$this->instance->belongsTo()]) && !$this->acl->hasSpecialPermission("\162\145\141\x64\137\141\154\x6c\x5f\164\162\x61\163\x68\143\x61\156"))) { goto gpqnV; } goto Wdn0W; AFZNV: } protected function onGettingAfterCheck($GabDK) { $this->instance->showDeleted()->where([$this->instance->deletedAt(), NULL, "\x49\123\40\x4e\x4f\124"]); } function post() { Factory::response()->sendError("\131\x6f\x75\40\x63\141\156\x20\156\157\x74\40\x63\x72\x65\x61\164\145\40\141\x20\164\162\x61\x73\x68\143\141\x6e\40\162\x65\163\x6f\165\x72\x63\145", 405); } function modify($GabDK = NULL, bool $Oynf2 = false) { goto uj2sk; acfsP: Stfei: goto Z6m7z; uj2sk: if (!(!$this->instance->inSchema([$this->instance->belongsTo()]) && !$this->acl->hasSpecialPermission("\x77\162\151\x74\x65\137\141\x6c\154\137\x74\162\141\163\x68\143\x61\156"))) { goto Stfei; } goto InhR1; InhR1: Factory::response()->sendError("\x46\157\x72\x62\x69\144\x64\x65\x6e", 403); goto acfsP; Z6m7z: parent::modify($GabDK, $Oynf2); goto ziPqF; ziPqF: } protected function onPuttingBeforeCheck2($GabDK, &$wYHZM) { $this->instance->showDeleted()->fill([$this->instance->deletedAt()]); $this->instance2->showDeleted()->where([$this->instance->deletedAt(), NULL, "\x49\123\40\116\x4f\124"]); } protected function onPuttingAfterCheck($GabDK, &$wYHZM) { goto mUoE4; alaFa: if (!($dm9pM !== false && $dm9pM !== "\146\x61\x6c\163\x65")) { goto Hc0aC; } goto Mxpub; VE6WX: $wYHZM[$this->instance->deletedAt()] = NULL; goto Dfi2N; pu0T5: Hc0aC: goto e2UiN; e2UiN: unset($wYHZM["\164\162\x61\x73\x68\x65\x64"]); goto VE6WX; Mxpub: return; goto pu0T5; mUoE4: $dm9pM = $wYHZM["\x74\x72\141\163\150\x65\x64"] ?? true; goto alaFa; Dfi2N: } function delete($GabDK = NULL) { goto hmwC9; c34gU: ql2cf: goto WYIHA; oINB4: Factory::response()->sendError("\x46\x6f\162\142\151\144\144\x65\156", 403); goto c34gU; hmwC9: if (!(!$this->instance->inSchema([$this->instance->belongsTo()]) && !$this->acl->hasSpecialPermission("\167\162\151\164\145\137\x61\x6c\x6c\137\x74\x72\x61\163\150\143\141\156"))) { goto ql2cf; } goto oINB4; WYIHA: parent::delete($GabDK); goto gccSa; gccSa: } protected function onDeletingBeforeCheck($GabDK) { $this->instance->showDeleted()->where([$this->instance->deletedAt(), NULL, "\111\x53\x20\x4e\117\124"]); } protected function onDeletingAfterCheck($GabDK) { $this->instance->setSoftDelete(false); } }
